// presence.jsx
import { rtdb } from "./firebase";
import { ref, set, remove, onValue } from "firebase/database";



// path: /presence/{mode}/{userId}
export function setPresence(user, mode = "viewer", liveGameId = null) {
  if (!user) return;
  // mode: "admin" or "viewer", add liveGameId if needed for per-game tracking
  const path = mode === "viewer" && liveGameId
    ? `presence/viewers/${liveGameId}/${user.uid}`
    : `presence/${mode}s/${user.uid}`;
  set(ref(rtdb, path), {
    uid: user.uid,
    name: user.displayName,
    photoURL: user.photoURL || "",
    mode,
    liveGameId: liveGameId || null,
    ts: Date.now(),
  });
}

export function clearPresence(user, mode = "viewer", liveGameId = null) {
  if (!user) return;
  const path = mode === "viewer" && liveGameId
    ? `presence/viewers/${liveGameId}/${user.uid}`
    : `presence/${mode}s/${user.uid}`;
  remove(ref(rtdb, path));
}

export function listenPresence(mode = "viewer", liveGameId = null, cb) {
  // mode: "admin" | "viewer"
  const path = mode === "viewer" && liveGameId
    ? `presence/viewers/${liveGameId}`
    : `presence/${mode}s`;
  return onValue(ref(rtdb, path), (snap) => {
    const val = snap.val() || {};
    cb(Object.values(val));
  });
}


export { clearPresence as removePresence };
