import React, { useState } from "react";
import { TrashIcon } from "../icons"; // adjust path if needed

const getResult = (game) => {
  if (game.homeScore > game.awayScore) return "win";
  if (game.homeScore < game.awayScore) return "loss";
  return "tie";
};

const resultColor = {
  win: "bg-green-500 text-white",
  loss: "bg-red-500 text-white",
  tie: "bg-gray-400 text-white",
};

const resultLabel = {
  win: "W",
  loss: "L",
  tie: "T",
};

export default function GameHistory({
  games = [],
  onDeleteGame,
}) {
  const [expanded, setExpanded] = useState({});

  if (!games || games.length === 0) {
    return (
      <div className="p-8 text-center text-gray-400 text-lg">
        No games yet.
      </div>
    );
  }

  return (
    <div className="space-y-4">
      {games.map((game) => {
        const expandedState = !!expanded[game.id];
        const result = getResult(game);

        return (
          <div
            key={game.id}
            className="bg-white dark:bg-gray-800 rounded-xl shadow border border-gray-200 dark:border-gray-700 transition"
          >
            {/* Collapsed Header */}
            <div
              className="flex items-center justify-between px-4 py-3 cursor-pointer"
              onClick={() =>
                setExpanded((exp) => ({
                  ...exp,
                  [game.id]: !expandedState,
                }))
              }
            >
              {/* Result Icon + Score */}
              <div className="flex items-center gap-2 min-w-[56px]">
                <div
                  className={`flex items-center justify-center w-8 h-8 rounded-full font-bold text-lg ${resultColor[result]}`}
                  title={resultLabel[result]}
                >
                  {resultLabel[result]}
                </div>
                <span className="font-mono text-sm text-gray-600 dark:text-gray-300">
                  {`${game.homeScore ?? 0}â€“${game.awayScore ?? 0}`}
                </span>
              </div>

              {/* Opponent & Date */}
              <div className="flex-1 min-w-0 ml-4">
                <div className="font-semibold text-gray-900 dark:text-white truncate">
                  vs {game.opponent || "Unknown Opponent"}
                </div>
                <div className="text-xs text-gray-400">
                  {game.date
                    ? new Date(game.date).toLocaleDateString()
                    : "Date N/A"}
                </div>
              </div>

              {/* Trash Icon */}
              <button
                className="ml-4 p-2 text-red-400 hover:text-red-600 rounded transition"
                title="Delete Game"
                onClick={(e) => {
                  e.stopPropagation();
                  if (window.confirm("Delete this game?")) {
                    onDeleteGame(game.id);
                  }
                }}
              >
                <TrashIcon />
              </button>
            </div>

            {/* Expanded Content */}
            {expandedState && (
              <div className="px-6 pb-4">
                <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mt-2">
                  {[
                    ["2-Point Made", game.fg2m ?? 0],
                    ["2-Point Att", game.fg2a ?? 0],
                    ["3-Point Made", game.fg3m ?? 0],
                    ["3-Point Att", game.fg3a ?? 0],
                    ["FT Made", game.ftm ?? 0],
                    ["FT Att", game.fta ?? 0],
                    ["Rebounds", game.reb ?? 0],
                    ["Assists", game.ast ?? 0],
                    ["Steals", game.stl ?? 0],
                    ["Blocks", game.blk ?? 0],
                    ["Fouls", game.fouls ?? 0],
                    ["Turnovers", game.to ?? 0],
                    ["Points", game.points ?? 0],
                  ].map(([label, value], i) => (
                    <div
                      key={label}
                      className="bg-gray-50 dark:bg-gray-900 rounded-lg p-2 flex flex-col items-center"
                    >
                      <span className="text-xs text-orange-500 font-bold mb-1">
                        {label}
                      </span>
                      <span className="text-xl font-mono text-gray-900 dark:text-white">
                        {value}
                      </span>
                    </div>
                  ))}
                </div>
              </div>
            )}
          </div>
        );
      })}
    </div>
  );
}

