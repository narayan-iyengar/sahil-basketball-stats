import React from "react";
import { LogOutIcon, SunIcon, MoonIcon, ChartIcon, BasketballIcon } from "./icons";

export default function Header({
  user,
  onSignOut,
  setPage,
  theme,
  toggleTheme,
  adminPresence = [],
  viewerPresence = []
}) {
  return (
    <header className="bg-white/50 dark:bg-gray-800/50 backdrop-blur-sm sticky top-0 z-20 border-b border-gray-200 dark:border-gray-700">
      <div className="container mx-auto flex justify-between items-center p-4">
        <div
          className="flex items-center cursor-pointer"
          onClick={() => setPage("game_setup")}
        >
          <BasketballIcon className="h-7 w-7 text-orange-500 animate-spin-slow" />
          <h1 className="text-xl font-bold text-orange-500 ml-2">
            Sahil's Stats
          </h1>
        </div>
        {/* --- PRESENCE INDICATOR --- */}
        <div className="flex items-center gap-4">
          {/* Viewers */}
          {viewerPresence.length > 0 && (
            <div className="flex items-center gap-1 group">
              <span className="text-xs text-gray-500 mr-1">Viewers:</span>
              {viewerPresence.map(u => (
                <div key={u.uid} className="relative group">
                  {u.photoURL ? (
                    <img
                      src={u.photoURL}
                      alt={u.displayName}
                      className="h-7 w-7 rounded-full border-2 border-orange-400"
                      title={u.displayName || u.email || "Viewer"}
                    />
                  ) : (
                    <span className="h-7 w-7 rounded-full bg-orange-200 text-orange-700 flex items-center justify-center font-bold border-2 border-orange-400" title={u.displayName || u.email || "Viewer"}>
                      {u.displayName ? u.displayName[0] : "?"}
                    </span>
                  )}
                  <div className="absolute left-1/2 -translate-x-1/2 bottom-full mb-1 opacity-0 group-hover:opacity-100 transition pointer-events-none z-10 bg-gray-800 text-white text-xs rounded px-2 py-1 shadow-lg whitespace-nowrap">
                    {u.displayName || u.email || "Viewer"}
                  </div>
                </div>
              ))}
            </div>
          )}
          {/* Admins */}
          {adminPresence.length > 0 && (
            <div className="flex items-center gap-1 group">
              <span className="text-xs text-gray-500 mr-1">Admins:</span>
              {adminPresence.map(u => (
                <div key={u.uid} className="relative group">
                  {u.photoURL ? (
                    <img
                      src={u.photoURL}
                      alt={u.displayName}
                      className="h-7 w-7 rounded-full border-2 border-blue-400"
                      title={u.displayName || u.email || "Admin"}
                    />
                  ) : (
                    <span className="h-7 w-7 rounded-full bg-blue-200 text-blue-700 flex items-center justify-center font-bold border-2 border-blue-400" title={u.displayName || u.email || "Admin"}>
                      {u.displayName ? u.displayName[0] : "?"}
                    </span>
                  )}
                  <div className="absolute left-1/2 -translate-x-1/2 bottom-full mb-1 opacity-0 group-hover:opacity-100 transition pointer-events-none z-10 bg-gray-800 text-white text-xs rounded px-2 py-1 shadow-lg whitespace-nowrap">
                    {u.displayName || u.email || "Admin"}
                  </div>
                </div>
              ))}
            </div>
          )}
          {/* Existing buttons */}
          <button
            onClick={toggleTheme}
            className="flex items-center bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-800 dark:text-gray-200 font-bold py-2 px-3 rounded-lg text-sm"
          >
            {theme === "light" ? <MoonIcon /> : <SunIcon />}
          </button>
          <button
            onClick={() => setPage("dashboard")}
            className="flex items-center bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-800 dark:text-gray-200 font-bold py-2 px-3 rounded-lg text-sm"
          >
            <ChartIcon />
            <span className="hidden sm:inline sm:ml-2">Dashboard</span>
          </button>
          <button
            onClick={onSignOut}
            className="bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-3 rounded-lg text-sm flex items-center"
          >
            <LogOutIcon />
            <span className="hidden sm:inline sm:ml-2">Sign Out</span>
          </button>
        </div>
      </div>
    </header>
  );
}

