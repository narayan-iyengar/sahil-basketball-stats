import React from "react";
import {
  LogOutIcon,
  SunIcon,
  MoonIcon,
  ChartIcon,
  BasketballIcon,
  EyeIcon,
  UserIcon,
} from "./icons";

// Blinking dot CSS
const BlinkingDot = ({ active }) => (
  <span
    className={`inline-block rounded-full mr-2 transition
      ${active ? "bg-red-500 animate-pulse" : "bg-gray-400"}
    `}
    style={{
      width: 12,
      height: 12,
      marginRight: 6,
      verticalAlign: "middle",
    }}
  ></span>
);

export default function Header({
  user,
  admins = [],
  viewers = [],
  onSignOut,
  setPage,
  theme,
  toggleTheme,
  page,
  liveGame,            // pass in the liveGame object or id if one exists
  goToLiveGame,        // callback to jump to live game page
}) {
  const adminList = Array.isArray(admins) ? admins : [];
  const viewerList = Array.isArray(viewers) ? viewers : [];
  const hasLive = !!liveGame;

  // Show "Live" on desktop, just dot on mobile
  const LiveIndicator = (
    <button
      disabled={!hasLive}
      className={`flex items-center px-2 py-1 rounded font-semibold text-xs select-none
        ${hasLive
          ? "cursor-pointer text-red-600 hover:bg-red-100 dark:hover:bg-gray-800"
          : "text-gray-400 cursor-not-allowed"}
      `}
      style={{ outline: "none", border: "none", background: "none" }}
      onClick={hasLive ? goToLiveGame : undefined}
      title={hasLive ? "Watch Live Game" : "No Live Game In Progress"}
    >
      <BlinkingDot active={hasLive} />
      <span className="hidden sm:inline">Live</span>
    </button>
  );

  // Tooltips (optional; can remove if not needed)
  const renderUserList = users =>
    Array.isArray(users) && users.length ? (
      <ul className="text-xs text-gray-800 dark:text-gray-200">
        {users.map((u, i) => (
          <li key={u.uid || i}>
            {u.name || "Unknown"} {u.uid === user?.uid && <span className="text-orange-500">(You)</span>}
          </li>
        ))}
      </ul>
    ) : (
      <span className="text-xs text-gray-400">No one online</span>
    );

  return (
    <header className="bg-white/50 dark:bg-gray-800/50 backdrop-blur-sm sticky top-0 z-20 border-b border-gray-200 dark:border-gray-700">
      <div className="container mx-auto flex justify-between items-center p-4">
        {/* Left-aligned Logo & Title */}
        <div className="flex items-center cursor-pointer" onClick={() => setPage("game_setup")}>
          <BasketballIcon className="h-7 w-7 text-orange-500 animate-spin-slow" />
          <h1 className="text-xl font-bold text-orange-500 ml-2">Sahil's Stats</h1>
        </div>

        {/* Presence & Live */}
        <div className="flex items-center gap-4">
          {LiveIndicator}
          <div className="flex items-center group relative">
            <UserIcon className="w-5 h-5 text-blue-400 mr-1" />
            <span className="text-xs text-gray-600 dark:text-gray-300 font-semibold">{adminList.length}</span>
            {/* Tooltip */}
            <div className="absolute top-full left-0 mt-2 p-2 rounded bg-white dark:bg-gray-900 shadow text-xs z-40 w-48 opacity-0 group-hover:opacity-100 pointer-events-none group-hover:pointer-events-auto transition-opacity duration-200">
              <b>Admins:</b>
              {renderUserList(adminList)}
            </div>
          </div>
          <div className="flex items-center group relative">
            <EyeIcon className="w-5 h-5 text-green-400 mr-1" />
            <span className="text-xs text-gray-600 dark:text-gray-300 font-semibold">{viewerList.length}</span>
            {/* Tooltip */}
            <div className="absolute top-full left-0 mt-2 p-2 rounded bg-white dark:bg-gray-900 shadow text-xs z-40 w-48 opacity-0 group-hover:opacity-100 pointer-events-none group-hover:pointer-events-auto transition-opacity duration-200">
              <b>Viewers:</b>
              {renderUserList(viewerList)}
            </div>
          </div>
        </div>

        {/* Controls */}
        <div className="flex items-center gap-2">
          <button
            onClick={toggleTheme}
            className="flex items-center bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-800 dark:text-gray-200 font-bold py-2 px-3 rounded-lg text-sm"
          >
            {theme === "light" ? <MoonIcon /> : <SunIcon />}
          </button>
          <button
            onClick={() => setPage("dashboard")}
            className="flex items-center bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-800 dark:text-gray-200 font-bold py-2 px-3 rounded-lg text-sm"
          >
            <ChartIcon />
            <span className="hidden sm:inline sm:ml-2">Dashboard</span>
          </button>
          <button
            onClick={onSignOut}
            className="bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-3 rounded-lg text-sm flex items-center"
          >
            <LogOutIcon />
            <span className="hidden sm:inline sm:ml-2">Sign Out</span>
          </button>
        </div>
      </div>
    </header>
  );
}

